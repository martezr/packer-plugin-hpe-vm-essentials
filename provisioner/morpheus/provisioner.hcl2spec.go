// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package morpheus

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	Url            *string                     `mapstructure:"url" cty:"url" hcl:"url"`
	Username       *string                     `mapstructure:"username" cty:"username" hcl:"username"`
	Password       *string                     `mapstructure:"password" cty:"password" hcl:"password"`
	AccessToken    *string                     `mapstructure:"access_token" cty:"access_token" hcl:"access_token"`
	TaskID         *int                        `mapstructure:"task_id" cty:"task_id" hcl:"task_id"`
	TaskParams     map[interface{}]interface{} `mapstructure:"task_parameters" cty:"task_parameters" hcl:"task_parameters"`
	WorkflowID     *int                        `mapstructure:"workflow_id" cty:"workflow_id" hcl:"workflow_id"`
	WorkflowPhase  *string                     `mapstructure:"workflow_phase" cty:"workflow_phase" hcl:"workflow_phase"`
	WorkflowParams map[interface{}]interface{} `mapstructure:"workflow_parameters" cty:"workflow_parameters" hcl:"workflow_parameters"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"url":                 &hcldec.AttrSpec{Name: "url", Type: cty.String, Required: false},
		"username":            &hcldec.AttrSpec{Name: "username", Type: cty.String, Required: false},
		"password":            &hcldec.AttrSpec{Name: "password", Type: cty.String, Required: false},
		"access_token":        &hcldec.AttrSpec{Name: "access_token", Type: cty.String, Required: false},
		"task_id":             &hcldec.AttrSpec{Name: "task_id", Type: cty.Number, Required: false},
		"task_parameters":     &hcldec.AttrSpec{Name: "task_parameters", Type: cty.Map(cty.String), Required: false},
		"workflow_id":         &hcldec.AttrSpec{Name: "workflow_id", Type: cty.Number, Required: false},
		"workflow_phase":      &hcldec.AttrSpec{Name: "workflow_phase", Type: cty.String, Required: false},
		"workflow_parameters": &hcldec.AttrSpec{Name: "workflow_parameters", Type: cty.Map(cty.String), Required: false},
	}
	return s
}
